!function(n,t,r){"use strict";function e(n,t){if(!n)throw new Error(t)}function i(n){return n.charAt(0).toUpperCase()+n.slice(1)}function o(n,t){return n.split("-").map(function(n,r){return t||0!==r?i(n):n}).join("")}function u(n){return"O"===n.charAt(n.length-1)}function a(n,t){return n.$hammer||(n.$hammer=new r.Manager(t[0]))}function c(n){var t=u(n);return n.slice(w.length,n.length-!!t)}function f(n,t){return n.$eval(t)}function s(n,t,r){var e=r+(u(r)?"pts":"Opts");return f(n,t[e])||{}}function p(n){return n.indexOf(" with ")>-1}function l(n){return n.split(" with ").map(function(n){return n.trim()})}function m(n,t,r,e){var i=[];return p(r[e])?(i=l(r[e]),n(i[0])):n(r[e])}function v(n,t,r){var e=[];return p(t[r])?(e=l(t[r]),f(n,e[1])):s(n,t,r)}function d(n,i){return function(o,f,s){var p=m(n,o,s,i),l=v(o,s,i);if(!p)return void console.warn("[ linkFn ] no callback for directive = `"+i+"`");var d=c(i);e(r[d],"`"+d+"` is not supported by Hammer.js.");var h=d.toLowerCase();l=t.extend(l,{event:h}),console.log("[ linkFn ]",{directive:i,optimized:u(i),event:h,opts:l});var w=a(o,f);w.add(new r[d](l)),w.on(h,function(n){return n?function(n){p(o,{hmEvent:n})}:function(n){o.$apply(function(){p(o,{hmEvent:n})})}}(u(i)))}}e(t,"`angular` is not defined."),e(r,"`Hammer` is not defined.");var h=["pan","pan-o","pinch","pinch-o","press","rotate","rotate-o","swipe","tap"],w="hm",g=t.module("hammer",[]);h.forEach(function(n){var t=o(w+"-"+n);g.directive(t,["$parse",function(n){return{restrict:"AC",link:d(n,t)}}])})}(window,window.angular,window.Hammer);
//# sourceMappingURL=angular-hammer.min.js.map